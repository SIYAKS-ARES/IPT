{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9580\viewh17460\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Cell 1\
sum = 0\
counter = 0\
while counter < 10:\
    sum += counter\
    counter += 1\
print("Sum of numbers between 0 and 10 = ", str(sum))\
\
# Cell 2\
start_value = eval(input("Enter the start value: "))\
start_value_fixed = start_value\
end_value = eval(input("Enter the end value: "))\
if start_value < end_value:\
    sum = 0\
    while start_value < end_value:\
        sum += start_value\
        start_value += 1\
else:\
    temp = end_value\
    end_value = start_value\
    start_value = temp\
    sum = 0\
    while start_value < end_value:\
        sum += start_value\
        start_value += 1\
print(start_value_fixed, " to ", end_value, " sum of numbers = ", sum)\
\
# Cell 3\
import random\
\
number1 = random.randint(0, 10)\
number2 = random.randint(0, 10)\
\
print(number1, "-", number2, "=?")\
result = eval(input("Your answer = ? "))\
\
result_sub = number1 - number2\
if result == result_sub:\
    print("Congratulations!")\
else:\
    print("Wrong")\
\
\'91\'92\'92\
es, you can modify the code to generate float numbers by using random.uniform() instead of random.randint(). random.uniform(a, b) generates a random floating-point number N such that a <= N <= b.\
\
Here's the modified code:\
\
python\
Copy code\
import random\
\
# Generate random floating-point numbers between 0 and 10\
number1 = random.uniform(0, 10)\
number2 = random.uniform(0, 10)\
\
# Round the numbers to two decimal places for better readability\
number1 = round(number1, 2)\
number2 = round(number2, 2)\
\
print(number1, "-", number2, "=?")\
result = float(input("Your answer = ? "))\
\
result_sub = round(number1 - number2, 2)  # Round the result to two decimal places\
if result == result_sub:\
    print("Congratulations!")\
else:\
    print("Wrong")\
In this modified version:\
\
random.uniform(0, 10) is used to generate random floating-point numbers between 0 and 10.\
The round() function is used to round the generated numbers to two decimal places for better readability and comparison accuracy.\
The input() function returns a string, which is converted to a float using float().\
The result_sub calculation also rounds the result to two decimal places for comparison with the user's input.\
\'91\'92\'92\
\
# Cell 4\
import random\
\
correct_count = 0\
question_count = 3\
counter = 0\
\
while counter < question_count:\
    number1 = random.randint(0, 10)\
    number2 = random.randint(0, 10)\
\
    print(number1, "-", number2, "=?")\
    result = eval(input("Your answer = ? "))\
\
    result_sub = number1 - number2\
    if result == result_sub:\
        print("Congratulations!")\
        correct_count += 1\
    else:\
        print("Wrong")\
    counter += 1\
\
print(correct_count, "/", question_count)\
\
\'91\'92\'92\
WITH LETTER GRADE\
import random\
\
correct_count = 0\
question_count = 3\
counter = 0\
\
while counter < question_count:\
    number1 = random.randint(0, 10)\
    number2 = random.randint(0, 10)\
\
    print(number1, "-", number2, "=?")\
    result = eval(input("Your answer = ? "))\
\
    result_sub = number1 - number2\
    if result == result_sub:\
        print("Congratulations!")\
        correct_count += 1\
    else:\
        print("Wrong")\
    counter += 1\
\
percentage_correct = round(float((correct_count / question_count) * 100))\
\
# Determine letter grade based on percentage\
if percentage_correct >= 90:\
    letter_grade = 'A'\
elif percentage_correct >= 80:\
    letter_grade = 'B'\
elif percentage_correct >= 70:\
    letter_grade = 'C'\
elif percentage_correct >= 60:\
    letter_grade = 'D'\
else:\
    letter_grade = 'F'\
\
print("Correct answers:", correct_count, "/", question_count)\
print("Percentage:", percentage_correct, "%")\
print("Letter grade:", letter_grade)\
\'91\'92\'92\
\
# Cell 5\
for i in range(10):\
    print(i)\
\
# Cell 6\
for i in range(1, 6):\
    for j in range(1, 6):\
        print("Nested Loops")\
\
\'91\'92\'92\
count = 0\
for i in range(1, 6):\
  for j in range(1, 6):\
    count += 1\
    print("Nested Loops",count)\
\'91\'92\'92\
\
# Cell 7\
for i in range(1, 5):\
    j = 0\
    while j < i:\
        print(j, end=" ")\
        j += 1\
    print()\
\
# Cell 8\
# This code will produce a TypeError because the range() function cannot accept floats as step values\
# Fixing it by using integers for the step value\
for i in range(0, 10, 1):\
    print(i)\
\
# Cell 9\
# The code in this cell will produce an infinite loop because the break condition is never met\
# Fixing it by adding a break statement when i reaches 50\
for i in range(0, 100):\
    if i == 50:\
        break\
    print(i)\
\
# Cell 10\
# The code in this cell will skip printing 50 because of the continue statement\
# Fixing it by removing the continue statement\
for i in range(0, 100):\
    if i == 50:\
        continue\
    print(i)\
}