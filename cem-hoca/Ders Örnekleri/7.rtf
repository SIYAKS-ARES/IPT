{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9580\viewh17460\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import random\
\
def create_list_with_user_input():\
    dizi = []\
    diziElemanSayisi = int(input("Enter the size of the list: "))\
    sum = 0\
    for i in range(diziElemanSayisi):\
        value = int(input(f"Enter element \{i+1\} of the list: "))\
        dizi.append(value)\
        sum += dizi[i]\
    avg = sum / diziElemanSayisi\
    print("List:", dizi)\
    print("Sum of list elements:", sum)\
    print("Average of list elements:", avg)\
    print("Last element of the list:", dizi[-1])\
\
def create_list_with_random_numbers():\
    dizi = []\
    diziElemanSayisi = int(input("Enter the size of the list: "))\
    for i in range(diziElemanSayisi):\
        value = random.randint(0, 50)\
        dizi.append(value)\
    print("Random list:", dizi)\
\
def find_smallest_and_largest():\
    dizi = []\
    diziElemanSayisi = int(input("Enter the size of the list: "))\
    for i in range(diziElemanSayisi):\
        value = random.randint(0, 50)\
        dizi.append(value)\
    enKucuk = dizi[0]\
    enBuyuk = dizi[0]\
    for i in range(diziElemanSayisi):\
        if dizi[i] < enKucuk:\
            enKucuk = dizi[i]\
        if dizi[i] > enBuyuk:\
            enBuyuk = dizi[i]\
    print("List:", dizi)\
    print("Smallest element in the list:", enKucuk)\
    print("Largest element in the list:", enBuyuk)\
\
def sort_list():\
    liste = []\
    listeElemanSayisi = int(input("Enter the size of the list: "))\
    for i in range(listeElemanSayisi):\
        value = random.randint(0, 50)\
        liste.append(value)\
    print("Original list:", liste)\
    print("Sorting the list in ascending order...")\
    liste.sort()\
    print("Sorted list in ascending order:", liste)\
    print("Sorting the list in descending order...")\
    liste.sort(reverse=True)\
    print("Sorted list in descending order:", liste)\
\
def create_matrix_with_user_input():\
    matrix = []\
    rowNumber = int(input("Enter the number of rows: "))\
    columnNumber = int(input("Enter the number of columns: "))\
    for row in range(rowNumber):\
        matrix.append([])\
        for column in range(columnNumber):\
            value = int(input(f"Enter element at position (\{row+1\}, \{column+1\}): "))\
            matrix[row].append(value)\
    print("Matrix:", matrix)\
\
def create_matrix_with_random_numbers():\
    matrix = []\
    rowNumber = int(input("Enter the number of rows: "))\
    columnNumber = int(input("Enter the number of columns: "))\
    print("Creating a matrix with random numbers...")\
    for row in range(rowNumber):\
        matrix.append([])\
        for column in range(columnNumber):\
            value = random.randint(0, 9)\
            matrix[row].append(value)\
    print("Random matrix:", matrix)\
\
if __name__ == "__main__":\
    create_list_with_user_input()\
    create_list_with_random_numbers()\
    find_smallest_and_largest()\
    sort_list()\
    create_matrix_with_user_input()\
    create_matrix_with_random_numbers()\
\
\
EXAMPLE RESULT:\
\
\pard\pardeftab720\partightenfactor0
\cf0 Enter the size of the list: 3\
Enter element 1 of the list: 1\
Enter element 2 of the list: 2\
Enter element 3 of the list: 3\
Enter the size of the list: 3\
List: [1, 2, 3]\
Sum of list elements: 6\
Average of list elements: 2.0\
Last element of the list: 3\
Random list: [31, 23, 49]\
Enter the size of the list: 3\
List: [17, 4, 31]\
Smallest element in the list: 4\
Largest element in the list: 31\
Enter the size of the list: 3\
Original list: [36, 21, 3]\
Sorting the list in ascending order...\
Sorted list in ascending order: [3, 21, 36]\
Sorting the list in descending order...\
Sorted list in descending order: [36, 21, 3]\
Enter the number of rows: 3\
Enter the number of columns: 3\
Enter element at position (1, 1): 1\
Enter element at position (1, 2): 2\
Enter element at position (1, 3): 3\
Enter element at position (2, 1): 1\
Enter element at position (2, 2): 2\
Enter element at position (2, 3): 3\
Enter element at position (3, 1): 1\
Enter element at position (3, 2): 2\
Enter element at position (3, 3): 3\
Matrix: [[1, 2, 3], [1, 2, 3], [1, 2, 3]]\
Enter the number of rows: 3\
Enter the number of columns: 3\
Creating a matrix with random numbers...\
Random matrix: [[0, 2, 5], [1, 9, 7], [3, 0, 0]]\
\
\
******************************************************************************************************\
\
This code defines several functions to perform various tasks related to lists and matrices, and then executes these functions in the `__main__` block. Here's an analysis of each function:\
\
1. **create_list_with_user_input():**\
   - This function prompts the user to input the size of the list and the elements of the list. It calculates the sum, average, and prints the list, sum, average, and last element of the list.\
\
2. **create_list_with_random_numbers():**\
   - This function prompts the user to input the size of the list and generates a list of random numbers between 0 and 50. It then prints the random list.\
\
3. **find_smallest_and_largest():**\
   - This function prompts the user to input the size of the list and generates a list of random numbers between 0 and 50. It then finds the smallest and largest elements in the list and prints them.\
\
4. **sort_list():**\
   - This function prompts the user to input the size of the list and generates a list of random numbers between 0 and 50. It then sorts the list in ascending and descending order and prints both sorted lists.\
\
5. **create_matrix_with_user_input():**\
   - This function prompts the user to input the number of rows and columns of the matrix and the elements of the matrix. It then prints the matrix.\
\
6. **create_matrix_with_random_numbers():**\
   - This function prompts the user to input the number of rows and columns of the matrix and generates a matrix with random numbers between 0 and 9. It then prints the random matrix.\
\
The code is structured to allow the user to interactively create lists and matrices either by providing input or by generating random numbers, and to perform various operations on them, such as finding the smallest and largest elements, sorting lists, and creating matrices.\
}